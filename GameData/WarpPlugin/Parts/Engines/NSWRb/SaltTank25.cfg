PART
{
	name = KspieNuclearSaltWaterMixer
	module = Part
	author = Jonathan Kissner

	MODEL
	{
		model = WarpPlugin/Parts/Engines/NSWRb/SaltTank25
		scale = 1, 1, 1
	}
	scale = 1
	rescaleFactor = 1

	node_stack_top = 0.0, 0.0, 0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -0.712, 0, 0.0, -1.0, 0.0, 2
	node_attach = -1.25, 0.0, 0.0, -1.0, 0.0, 0.0, 2

	TechRequired = exoticNuclearPropulsion
	entryCost = 62000

	cost = 280000	// 865 * 300 = 259500 + 20000
	category = FuelTank
	subcategory = 0
	title = #LOC_KSPIE_NuclearSaltWaterISRU_title // #LOC_KSPIE_NuclearSaltWaterISRU_title = ISRU Nuclear Salt Water Fabricator
	manufacturer =  Kerbojet Nuclear
	description = #LOC_KSPIE_NuclearSaltWaterISRU_desc // #LOC_KSPIE_NuclearSaltWaterISRU_desc = This mixer can fabricate Nuclear Salt Water. It consists of an array of secure vaults, each heavily subdivided with neutron-dampening material, to safely store otherwise highly fissile dust used for advanced nuclear fuel systems.
	attachRules = 1,1,1,1,0

	mass = 1.5
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 15
	maxTemp = 2000
	breakingForce = 200
	breakingTorque = 200
	bulkheadProfiles = size2, srf

	RESOURCE
	{
		name =  EnrichedUranium
		amount = 300
		maxAmount = 300
	}

	MODULE
	{
		name = FNRadioActiveStorage
	}

	MODULE
	{
		name = TweakScale
		type = stack_interstellar
		defaultScale = 2.5
		scaleFactors = 2.5, 3.75, 5, 7.5, 10, 15, 20, 30, 40, 60, 80
	}

	MODULE
	{
		name = ModuleResourceConverter

		ConverterName = Enriched Uranium & LqdWater
		StartActionName = Start Create NSW from EnrU
		StopActionName = Stop Create NSW from EnrU

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium		//	Density(EnrichedUranium	) = 0.01097
			Ratio = 0.1924
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdWater			//	Density(LqdWater) = 0.001
			Ratio = 9.8076
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge		//	Density(EC) = 0
			Ratio = 10				//	How much Ec is used per second.
		}

		OUTPUT_RESOURCE
		{
			ResourceName = NuclearSaltWater		//	Density(NuclearSaltWater) = 0.00125
			Ratio = 9.8076				//	Mix   0.01097 * 0.1924 + 9.8076 * 0.001 / 0.0012152 = 0.011918228  / 0.001215
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	MODULE
	{
		name = ModuleResourceConverter

		ConverterName = Uranium-233 & LqdWater
		StartActionName = Start Create NSW from U-233
		StopActionName = Stop Create NSW Production from U-233 

		UseSpecialistBonus = true			//	EB*[SBB+(EE*SEF)] ; EE=0-6
		SpecialistEfficiencyFactor = 0.025		//	SEF
		SpecialistBonusBase = 0.85			//	SBB
		ExperienceEffect = ConverterSkill		//	EE (NoSpecialist=0;FiveStarSpecialist=6)
		EfficiencyBonus = 1				//	EB

		INPUT_RESOURCE
		{
			ResourceName = Uranium-233		//	Density(EnrichedUranium	) = 0.01097
			Ratio = 0.01924
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdWater			//	Density(LqdWater) = 0.001
			Ratio = 9.8076
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge		//	Density(EC) = 0
			Ratio = 10				//	How much Ec is used per second.
		}

		OUTPUT_RESOURCE
		{
			ResourceName = NuclearSaltWater		//	Density(NuclearSaltWater) = 0.00125
			Ratio = 9.8076				//	Mix   0.01097 * 0.1924 + 9.8076 * 0.001 / 0.0012152 = 0.011918228  / 0.001215
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
}
