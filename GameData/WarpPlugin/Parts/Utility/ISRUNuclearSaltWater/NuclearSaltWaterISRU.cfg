PART
{
	// General parameters
	name = NuclearSaltWaterISRU
	module = Part
	author = Eleusis La Arwall

	// Asset parameters
	mesh = modelIHRMOR7ISRU.mu
	scale = 1
	rescaleFactor = 1

	// Node definitions - Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_top = 0.0, 0.5, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -0.5, 0.0, 0.0, -1.0, 0.0, 2
	node_attach = 0.0, 0.0, 1.28, 0.0, 0.0, 1.0, 1

	// Editor parameters
	TechRequired = nuclearFuelSystems
	entryCost = 60000
	cost = 90000
	category = Utility
	subcategory = 0

	title = #LOC_KSPIE_NuclearFuelProcessing_title 		// ISRU Nuclear Fuel Processor
	manufacturer = Keridian Dynamics
	description = #LOC_KSPIE_NuclearFuelProcessing_desc	// This handy part can fabricate and recycle nuclear fuel. When connected to some reactors allows breeding of fissile from fertile material like Thorium.

	tags = Nuclear Salt Water Fuel ISRU KSPIE recycle fabricate breed

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// Standard part parameters
	mass = 3
	fuelCrossFeed = True
	bulkheadProfiles = size2

	// Drag
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2

	// Damage and Temperature
	crashTolerance = 8
	maxTemp = 2200

	// Modules
	MODULE
	{
		name = TweakScale
		type = stack_interstellar
		defaultScale = 2.5
		scaleFactors = 2.5, 3.75, 5, 7.5, 10, 15, 20, 30, 40, 60, 80
	}

	MODULE
	{
		name = InterstellarPowerSupply
		powerPriority = 1
	}

	MODULE
	{
		name = NuclearRefineryController
		refineryType = 0
	}

	MODULE
	{
		name = NuclearFuelReprocessor
	}

	MODULE
	{
		name = ModuleOverheatDisplay
	}

	MODULE
	{
		name = FNRadioActiveStorage
	}

	MODULE
	{
		name = InterstellarResourceConverter
		primaryResourceNames = LqdWater
		secondaryResourceNames = Water
		maxPowerPrimary = 10
		maxPowerSecondary = 10
		primaryConversionEnergyCost = 0.1 // pumping energy
		primaryConversionEnergyCost = 0.1 // pumping energy
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = #LOC_KSPIE_ConverterName11 	// #LOC_KSPIE_ConverterName11 = Uraninite Processing
		StartActionName = #LOC_KSPIE_StartActionName11 	// #LOC_KSPIE_StartActionName11 = Start Uraninite Processing
		StopActionName = #LOC_KSPIE_StopActionName11 	// #LOC_KSPIE_StopActionName11 = Stop Uraninite Processing

		UseSpecialistBonus = true			//	EB*[SBB+(EE*SEF)] ; EE=0-6
		SpecialistEfficiencyFactor = 0.025		//	SEF
		SpecialistBonusBase = 0.85			//	SBB
		ExperienceEffect = ConverterSkill		//	EE (NoSpecialist=0;FiveStarSpecialist=6)
		EfficiencyBonus = 1				//	EB

		INPUT_RESOURCE
		{
			ResourceName = Uraninite		// density 7.5
			Ratio = 10
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 60
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Helium
			Ratio = 0.01
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = EnrichedUranium		// density 10.97
			Ratio = 0.0085
			DumpExcess = False
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedUranium		// density 10.97
			Ratio = 6.8				// = 7.5/10.97 - 0.0085 * 10
			DumpExcess = True
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	MODULE
	{
		name = ModuleResourceConverter

		ConverterName = Enriched Uranium & LqdWater
		StartActionName = Start Create NSW from EnrU
		StopActionName = Stop Create NSW from EnrU

		UseSpecialistBonus = true			//	EB*[SBB+(EE*SEF)] ; EE=0-6
		SpecialistEfficiencyFactor = 0.025		//	SEF
		SpecialistBonusBase = 0.85			//	SBB
		ExperienceEffect = ConverterSkill		//	EE (NoSpecialist=0;FiveStarSpecialist=6)
		EfficiencyBonus = 1				//	EB

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium		//	Density(EnrichedUranium	) = 0.01097
			Ratio = 0.1924
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdWater			//	Density(LqdWater) = 0.001
			Ratio = 9.8076
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge		//	Density(EC) = 0
			Ratio = 10				//	How much Ec is used per second.
		}

		OUTPUT_RESOURCE
		{
			ResourceName = NuclearSaltWater		//	Density(NuclearSaltWater) = 0.00125
			Ratio = 9.8076				//	Mix   0.01097 * 0.1924 + 9.8076 * 0.001 / 0.0012152 = 0.011918228  / 0.001215
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	MODULE
	{
		name = ModuleResourceConverter

		ConverterName = Uranium-233 & LqdWater
		StartActionName = Start Create NSW from U-233
		StopActionName = Stop Create NSW Production from U-233 

		UseSpecialistBonus = true			//	EB*[SBB+(EE*SEF)] ; EE=0-6
		SpecialistEfficiencyFactor = 0.025		//	SEF
		SpecialistBonusBase = 0.85			//	SBB
		ExperienceEffect = ConverterSkill		//	EE (NoSpecialist=0;FiveStarSpecialist=6)
		EfficiencyBonus = 1				//	EB

		INPUT_RESOURCE
		{
			ResourceName = Uranium-233		//	Density(EnrichedUranium	) = 0.01097
			Ratio = 0.01924
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = LqdWater			//	Density(LqdWater) = 0.001
			Ratio = 9.8076
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge		//	Density(EC) = 0
			Ratio = 10				//	How much Ec is used per second.
		}

		OUTPUT_RESOURCE
		{
			ResourceName = NuclearSaltWater		//	Density(NuclearSaltWater) = 0.00125
			Ratio = 9.8076				//	Mix   0.01097 * 0.1924 + 9.8076 * 0.001 / 0.0012152 = 0.011918228  / 0.001215
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 1000		//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1		//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0	//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1	//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05	//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0	//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0	//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01 //If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1	//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.01	//How much energy we push to the active radiator
		MaxCalculationWarp = 1000	//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 4000		//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 500		//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}

	// Actinides
	MODULE
	{
		name = FNResourceTransfer
		resourceName = Actinides
		showPriority = true
	}

	// Beryllium
	MODULE
	{
		name = FNResourceTransfer
		resourceName = Beryllium
		showPriority = true
	}

	// DepletedUranium 
	RESOURCE
	{
		name = DepletedUranium
		amount = 0
		maxAmount = 50
	}
	MODULE
	{
		name = FNResourceTransfer
		resourceName = DepletedUranium
		showPriority = true
	}

	// EnrichedUranium
	RESOURCE
	{
		name = EnrichedUranium
		amount = 0
		maxAmount = 50
	}
	MODULE
	{
		name = FNResourceTransfer
		resourceName = EnrichedUranium
		showPriority = true
	}

	// Protactinium-233
	MODULE
	{
		name = FNResourceTransfer
		resourceName = Protactinium-233
		showPriority = true
	}

	// Uraninite
	RESOURCE
	{
		name = Uraninite
		amount = 0
		maxAmount = 50
	}
	MODULE
	{
		name = FNResourceTransfer
		resourceName = Uraninite
		showPriority = true
	}

	// Uranium-233
	RESOURCE
	{
		name = Uranium-233
		amount = 0
		maxAmount = 50
	}
	MODULE
	{
		name = FNResourceTransfer
		resourceName = Uranium-233
		showPriority = true
	}

	// Thorium
	RESOURCE
	{
		name = Thorium
		amount = 0
		maxAmount = 50
	}
	MODULE
	{
		name = FNResourceTransfer
		resourceName = Thorium
		showPriority = true
	}

	RESOURCE
	{
		name = NuclearSaltWater
		amount = 0
		maxAmount = 50
	}

	RESOURCE
	{
		name = LqdWater
		amount = 0
		maxAmount = 50
	}

	MODULE
	{
		name = InterstellarFuelSwitch
		resourceGui = Resources
		resourceNames = Protactinium-233,Actinides,Beryllium
		resourceAmounts = 50,50,50
		initialResourceAmounts = 0,0,0
		tankCost = 10000
		basePartMass = 3
		showMass = false
		showInfo = false
		showTankName = false
		adaptiveTankSelection = false
		displayTankCost = false
		displayWetDryMass = false
		updateModuleCost = false
		returnDryMass = false
		orderBySwitchName = false
		ignoreInitialCost = true
		updateModuleCost = true		
		hasGUI = false
	}

	MODULE
	{
		name = InterstellarFuelSwitch
		resourceGui = Resources
		resourceNames = Helium,Tritium,Helium3,XenonGas
		resourceAmounts = 5000,5000,5000,1000
		initialResourceAmounts = 0,0,0,0
		tankCost = 10000
		basePartMass = 3
		showMass = false
		showInfo = false
		showTankName = false
		adaptiveTankSelection = false
		displayTankCost = false
		displayWetDryMass = false
		updateModuleCost = false
		returnDryMass = false
		orderBySwitchName = false
		ignoreInitialCost = true
		updateModuleCost = true
		hasGUI = false
	}

	MODULE
	{
		name = FNRadioactiveDecay
		name = ModuleElementRadioactiveDecay
		halfLifeInDays = 26.975
		resourceName = Protactinium-233
		decayProduct = Uranium-233
		canConvertVolume = false
	}

	MODULE
	{
		name		=	FNRadioactiveDecay
		halfLifeInYears = 	12.26
		decayConstant 	=	1.7915586e-9			// decayConstant is obsolete but still present for backward compatibility
		resourceName	=	Tritium
		decayProduct	=	Helium3
		canConvertVolume = 	false
	}
}
